/**
 * Created by Jiazhang_Liu on 5/19/2015.
 */

//Describe how you could use a single array to implement three stack

public class ImplementThreeStacksWithArray {
    int[] stackArray;
    int index1, index2, index3;
    int[] indexes;
    public ImplementThreeStacksWithArray(int size) {
        stackArray = new int[size];
        index1 = 0;
        index2 = size/3;
        index3 = 2*size/3;
        indexes = new int[3];
        indexes[0] = index1;
        indexes[1] = index2;
        indexes[2] = index3;
    }
    public void push(int stackNum, int val) {
        if(stackNum <= 0 || stackNum > 3) {
            return;
        }

        stackArray[indexes[stackNum-1]] = val;
        indexes[stackNum-1] += 1;
    }

    public int pop(int stackNum) {
        indexes[stackNum-1]--;
        if(indexes[stackNum-1] <= -1) return Integer.MIN_VALUE;

        int tmp = stackArray[indexes[stackNum-1]];
        stackArray[indexes[stackNum-1]] = 0;

        return tmp;
    }

    public void display() {
        for(Integer i : stackArray) {
            System.err.print(i + " ");
        }
        System.err.println();
    }

    public static void main(String args[]) {
        ImplementThreeStacksWithArray i = new ImplementThreeStacksWithArray(30);

        i.push(1,1);i.push(1,2);i.push(1,3);i.push(1,4);

        i.push(2,5);i.push(2,6);i.push(2,7);i.push(2,8);

        i.push(3,9);i.push(3,10);i.push(3,11);i.push(3,12);

        i.display();

        i.pop(1);i.display();
        i.pop(3);i.display();
        i.pop(1);i.display();
        i.pop(1);i.display();

    }
}
