import java.util.List;

/**
 * Created by Jiazhang_Liu on 5/18/2015.
 */

//You have two numbers represented by a linked list, where each node contains a
//single digit. The digits are stored in reverse order, such that the 1 's digit is at the head
//of the list. Write a function that adds the two numbers and returns the sum as a
//linked list.

public class LinkedListAdd {

    public ListNode add(ListNode head1, ListNode head2) {
        if(head1 == null && head2 == null) return null;
        if(head1 == null || head2 == null) return head1 == null ? head2 : head1;

        ListNode dummy = new ListNode(Integer.MIN_VALUE);
        ListNode cur = dummy;
        int carry = 0;
        while(head1 != null && head2 != null) {
            int sum = head1.val + head2.val + carry;
            cur.next = new ListNode(sum%10);
            carry = sum >= 10 ? sum / 10 : 0;
            head1 = head1.next;
            head2 = head2.next;
            cur = cur.next;
        }

        if(head1 == null && head2 == null && carry == 0) {
            return dummy.next;
        } else if(head1 == null) {
            while(head2 != null) {
                int sum = head2.val + carry;
                cur.next = new ListNode(sum%10);
                carry = sum >= 10 ? sum / 10 : 0;
                head2 = head2.next;
                cur = cur.next;
            }
        } else {
            while(head1 != null) {
                int sum = head1.val + carry;
                cur.next = new ListNode(sum%10);
                carry = sum >= 10 ? sum / 10 : 0;
                head1 = head1.next;
                cur = cur.next;
            }
        }
        if(carry != 0) {
            cur.next = new ListNode(1);
        }

        return dummy.next;
    }

    public static void main(String args[]) {
        LinkedListAdd k = new LinkedListAdd();

        ListNode head1 = new ListNode(1);
        ListNode head2 = new ListNode(9);
        ListNode n1 = new ListNode(9);
        ListNode n2 = new ListNode(1);
        ListNode n3 = new ListNode(9);
        ListNode n4 = new ListNode(9);
        ListNode n5 = new ListNode(9);

        head1.next = n1;
        n1.next = n2;

        head2.next = n3;
        n3.next = n4;
        n4.next = n5;

        k.display(head1);
        k.display(head2);
        ListNode sum = k.add(head1, head2);
        k.display(sum);
    }

    public void display(ListNode head) {
        while(head != null) {
            System.err.print(head.val + " ");
            head = head.next;
        }

        System.err.println();
    }

    private static class ListNode {
        int val;
        ListNode next;

        public ListNode(int val) {
            this.val = val;
        }
    }
}
