/**
 * Created by Jiazhang_Liu on 5/15/2015.
 */

// nlgn time n space.
// could do n time if we count number of different chars and compare them at last

import java.util.Arrays;

// Given two strings, write a method to decide if one is a permutation of the other
public class TwoStringPermutation {

    public boolean isPermutation (String input1, String input2) {
        if(input1 == null && input2 == null) {
            return false;
        }

        if(input1 == null || input2 == null) {
            return false;
        }

        char[] c1 = input1.toCharArray();
        char[] c2 = input2.toCharArray();

        // nlgn
        Arrays.sort(c1);
        Arrays.sort(c2);

        if(c1.length != c2.length) {
            return false;
        } else {
            for(int i = 0; i < c1.length; i++) {
                if(c1[i] != c2[i]) {
                    return false;
                }
            }
        }

        return true;
    }

    public static void main(String args[]) {
        TwoStringPermutation tsp = new TwoStringPermutation();
        String s1 = "  abc";
        String s2 = "cba  ";
        System.err.println(s1 + "<->" + s2 + ": " + tsp.isPermutation(s1, s2));
    }

}
